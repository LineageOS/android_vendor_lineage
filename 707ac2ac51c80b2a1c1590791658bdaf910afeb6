{
  "comments": [
    {
      "key": {
        "uuid": "1fde57af_9a6f5490",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 15173
      },
      "writtenOn": "2020-06-20T00:03:08Z",
      "side": 1,
      "message": "This doesn\u0027t convert (and I would -2 immediately if it dropped legacy extract utils mid-branch), it adds a py3 extract utils.",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 46
      },
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f371880_81e74b6b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 13648
      },
      "writtenOn": "2020-06-20T12:37:57Z",
      "side": 1,
      "message": "I agree that the commit message should be changed, but I don\u0027t see any reason to block it mid-branch if a 1:1 conversion is made.",
      "parentUuid": "1fde57af_9a6f5490",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 46
      },
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5845b5b_75c49d67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 19612
      },
      "writtenOn": "2020-06-20T14:30:44Z",
      "side": 1,
      "message": "Changed",
      "parentUuid": "4f371880_81e74b6b",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 46
      },
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee92cedf_6de8f8b0",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 15173
      },
      "writtenOn": "2020-06-20T00:03:08Z",
      "side": 1,
      "message": "Is there any good reason to grant copyrights back to 2016 and to CyanogenMod at all -- is this based on prior copyrighted work?",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 3,
        "endChar": 47
      },
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "484008d6_37a15a30",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 19612
      },
      "writtenOn": "2020-06-20T14:30:44Z",
      "side": 1,
      "message": "Removed, I had copy-pasted it before uploading",
      "parentUuid": "ee92cedf_6de8f8b0",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 3,
        "endChar": 47
      },
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c11be6d_5356e317",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 16082
      },
      "writtenOn": "2020-06-19T17:03:25Z",
      "side": 1,
      "message": "see below about returning what you\u0027re checking for",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05b025e3_b12df3d8",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 16082
      },
      "writtenOn": "2020-06-19T17:03:25Z",
      "side": 1,
      "message": "see below about returning what you\u0027re checking for",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df1c7dab_4641bbd4",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 16082
      },
      "writtenOn": "2020-06-19T17:03:25Z",
      "side": 1,
      "message": "see below about returning what you\u0027re checking for",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a6c336b_bf4adb76",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 16082
      },
      "writtenOn": "2020-06-19T17:03:25Z",
      "side": 1,
      "message": "You could avoid repeating yourself and do something like\n\nshasum_prog \u003d \u0027sha1sum\u0027 if platform \u003d\u003d \u0027darwin\u0027 else \u0027shasum\u0027\n\nthen plug shasum_prog into subprocess",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55a330b9_0428065e",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 19612
      },
      "writtenOn": "2020-06-20T14:30:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a6c336b_bf4adb76",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f566e4c6_896ff90f",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 16082
      },
      "writtenOn": "2020-06-19T17:03:25Z",
      "side": 1,
      "message": "Just return this like:\n`return str(file).startswith(prefix)\n\ninstead of wrapping in if",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baee2490_f26d6b75",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 19612
      },
      "writtenOn": "2020-06-20T14:30:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f566e4c6_896ff90f",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24f0032a_3bf5ca0a",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 16082
      },
      "writtenOn": "2020-06-19T17:03:25Z",
      "side": 1,
      "message": "same here",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bd6abb5_3ff78656",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 19612
      },
      "writtenOn": "2020-06-20T14:30:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24f0032a_3bf5ca0a",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2eeb03cc_0975ef23",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 16082
      },
      "writtenOn": "2020-06-19T17:03:25Z",
      "side": 1,
      "message": "This doesn\u0027t return \"\" on failure, it returns None",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49ee48f2_91baa3c3",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 19612
      },
      "writtenOn": "2020-06-20T14:30:44Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "2eeb03cc_0975ef23",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32b70c67_fe9acde3",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 16082
      },
      "writtenOn": "2020-06-19T17:19:46Z",
      "side": 1,
      "message": "Might as well use f-strings here `f\u0027{file}:{location}\u0027`",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9177a02e_f723111c",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 19612
      },
      "writtenOn": "2020-06-20T14:30:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32b70c67_fe9acde3",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77e9f87e_bf2e0ae3",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 13028
      },
      "writtenOn": "2020-06-20T12:55:51Z",
      "side": 1,
      "message": "missed the \"b\" and hit the \"v\"? should be \"AdbHelpers\", right?",
      "range": {
        "startLine": 145,
        "startChar": 6,
        "endLine": 145,
        "endChar": 16
      },
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87284bd2_f52c8121",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 19612
      },
      "writtenOn": "2020-06-20T14:30:44Z",
      "side": 1,
      "message": "Nope, it\u0027s fine. That match is just a coincidence. Aim is to keep functions in this class which are dependent on 1st class.",
      "parentUuid": "77e9f87e_bf2e0ae3",
      "range": {
        "startLine": 145,
        "startChar": 6,
        "endLine": 145,
        "endChar": 16
      },
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d97aa471_0735aa55",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 16082
      },
      "writtenOn": "2020-06-19T17:03:25Z",
      "side": 1,
      "message": "You don\u0027t use count, and this loop will run really fast, you might be better adding a sleep here or doing something like `adb wait-for-device`",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "debd7a2a_099486e7",
        "filename": "build/tools/extract_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 19612
      },
      "writtenOn": "2020-06-20T14:30:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d97aa471_0735aa55",
      "revId": "707ac2ac51c80b2a1c1590791658bdaf910afeb6",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    }
  ]
}